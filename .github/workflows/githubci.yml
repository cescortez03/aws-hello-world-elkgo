name: CI/CD Hello World
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  pr_validation:
    if: github.event_name == 'pull_request'
    name: "pr"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: pr
        run: |
          echo "Running pr"
          echo "Build microservice, ie: docker build... Dockerfile"
          echo "Run linting and static analyzers."

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: "release"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: tag_release
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0)
          NEW_TAG=$(echo $LATEST_TAG | awk -F. '{ printf("%s.%s.%s", $1, $2, $3+1) }')
          git config --global user.name "SAGithubActions"
          git config --global user.email "sa.actions@github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      - name: build
        run: |
          "echo Build microservice, ie: docker build... Dockerfile.hello " 
          "echo "Push image to a container registry."



  deploy_sandbox:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: "deploy-sandbox-us-west-2"
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: deploy-sandbox
        run: |
          echo "Running Deploy Sandbox Job"
          # Add sandbox deployment logic (e.g., Terraform apply to sandbox)

  deploy_prod:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: "deploy-prod-us-west-2"
    runs-on: ubuntu-latest
    needs: deploy_sandbox
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: deploy-prod
        run: |
          echo "Running Deploy Prod Job"
          # Add prod deployment logic (e.g., Terraform apply to prod)